{"version":3,"file":"ng2-brpipes.js","sources":["ng://ng2-brpipes/lib/real.pipe.ts","ng://ng2-brpipes/lib/utils.ts","ng://ng2-brpipes/lib/cei.pipe.ts","ng://ng2-brpipes/lib/telefone.pipe.ts","ng://ng2-brpipes/lib/cpf.pipe.ts","ng://ng2-brpipes/lib/cnpj.pipe.ts","ng://ng2-brpipes/lib/cpf-cnpj.pipe.ts","ng://ng2-brpipes/lib/cep.pipe.ts","ng://ng2-brpipes/lib/br-pipes.module.ts","ng://ng2-brpipes/public-api.ts","ng://ng2-brpipes/ng2-brpipes.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'real'\r\n})\r\n// R$ 1.000,00\r\nexport class RealPipe implements PipeTransform {\r\n    transform(value: any,\r\n        decimalDelimiter: string = ',',\r\n        decimalLength: number = 2,\r\n        chunkDelimiter: string = '.',\r\n        chunkLength: number = 3): any {\r\n\r\n        if(value === null ||  value === undefined || value === '') {\r\n            return '';\r\n        }\r\n\r\n        if (isNaN(value)) {\r\n            return value;\r\n        }\r\n        \r\n        let result = '\\\\d(?=(\\\\d{' + chunkLength + '})+' + (decimalLength > 0 ? '\\\\D' : '$') + ')'\r\n        let num = value.toFixed(Math.max(0, ~~decimalLength));\r\n\r\n        return 'R$' + (decimalDelimiter ? num.replace('.', decimalDelimiter) : num).replace(new RegExp(result, 'g'), '$&' + chunkDelimiter);\r\n    }\r\n}","export function isString(value: any): boolean {\r\n\r\n    return typeof value === 'string';\r\n}\r\n\r\nexport function hasLength(value: any): boolean {\r\n\r\n    return value.toString().trim().length > 0;\r\n}\r\n\r\nexport function removeNonDigits(value: string): string {\r\n    return value.replace(/\\D/g,'');\r\n}\r\n\r\nexport function formatCnpj(value: string): string {\r\n\r\n    return `${value.substr(0, 2)}.${value.substr(2, 3)}.${value.substr(5, 3)}/${value.substr(8, 4)}-${value.substr(12, 2)}`;\r\n}\r\n\r\nexport function formatCpf(value: string): string {\r\n\r\n    return `${value.substr(0, 3)}.${value.substr(3, 3)}.${value.substr(6, 3)}-${value.substr(9, 2)}`;\r\n}\r\n","import { isString } from './utils';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'cei'\r\n})\r\n// 76.119.87629/85\r\nexport class CeiPipe implements PipeTransform {\r\n    transform(value: any): any {\r\n        if (!isString(value)) {\r\n            return value;\r\n        }\r\n\r\n        if (value && value.length === 12) {\r\n            return `${value.substr(0, 2)}.${value.substr(2, 3)}.${value.substr(5, 5)}/${value.substr(10, 2)}`;\r\n        }\r\n\r\n        return value;\r\n    }\r\n}","import { isString, hasLength } from './utils';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'telefone'\r\n})\r\n// (31)9609-8689 ou (31)99609-8689\r\nexport class TelefonePipe implements PipeTransform {\r\n    transform(value: any): any {\r\n        if (!isString(value)) {\r\n            return value;\r\n        } else if (!hasLength(value)) {\r\n            return '';\r\n        } else if (value && value.length === 10) {\r\n            return `(${value.substr(0, 2)})${value.substr(2, 4)}-${value.substr(6, 4)}`;\r\n        } else if (value && value.length === 11) {\r\n            return `(${value.substr(0, 2)})${value.substr(2, 5)}-${value.substr(7, 4)}`;\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n}","import { isString, formatCpf, removeNonDigits } from './utils';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'cpf'\r\n})\r\n// 019.642.561-19\r\nexport class CpfPipe implements PipeTransform {\r\n    transform(value: any): any {\r\n        if (!isString(value)) {\r\n            return value;\r\n        }\r\n        const onlyDigits = removeNonDigits(value);\r\n\r\n        if(onlyDigits && onlyDigits.length === 11) {\r\n            return formatCpf(onlyDigits);\r\n        }\r\n\r\n        return value;\r\n    }\r\n}\r\n","import { isString, formatCnpj, removeNonDigits } from './utils';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'cnpj'\r\n})\r\n// 99.999.999/9999-99\r\nexport class CnpjPipe implements PipeTransform {\r\n    transform(value: any): any {\r\n        if (!isString(value)) {\r\n            return value;\r\n        }\r\n\r\n        const onlyDigits = removeNonDigits(value);\r\n\r\n        if(onlyDigits && onlyDigits.length === 14) {\r\n            return formatCnpj(onlyDigits);\r\n        }\r\n\r\n        return value;\r\n    }\r\n}\r\n","import { isString, formatCpf, formatCnpj, removeNonDigits } from './utils';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'cpfCnpj'\r\n})\r\n// 019.642.561-19 || 99.999.999/9999-99\r\nexport class CpfCnpjPipe implements PipeTransform {\r\n    transform(value: any): any {\r\n        if (!isString(value)) {\r\n            return value;\r\n        }\r\n\r\n        const onlyDigits = removeNonDigits(value);\r\n\r\n        if(onlyDigits && onlyDigits.length === 11) {\r\n            return formatCpf(onlyDigits);\r\n        } else if (onlyDigits && onlyDigits.length === 14) {\r\n            return formatCnpj(onlyDigits);\r\n        }\r\n\r\n        return value;\r\n    }\r\n}\r\n","import { isString } from './utils';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'cep'\r\n})\r\n// 72006-226\r\nexport class CepPipe implements PipeTransform {\r\n    transform(value: any): any {\r\n        if (!isString(value)) {\r\n            return value;\r\n        }\r\n\r\n        if(value && value.length === 8) {\r\n            return `${value.substr(0, 5)}-${value.substr(5, 3)}`;\r\n        }\r\n\r\n        return value;\r\n    }\r\n}","import { CpfCnpjPipe } from './cpf-cnpj.pipe';\r\nimport { RealPipe } from './real.pipe';\r\nimport { CeiPipe } from './cei.pipe';\r\nimport { TelefonePipe } from './telefone.pipe';\r\nimport { CpfPipe } from './cpf.pipe';\r\nimport { CnpjPipe } from './cnpj.pipe';\r\nimport { CepPipe } from './cep.pipe';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CepPipe,\r\n        CnpjPipe,\r\n        CpfPipe,\r\n        CpfCnpjPipe,\r\n        TelefonePipe,\r\n        CeiPipe,\r\n        RealPipe\r\n    ],\r\n    exports: [\r\n        CepPipe,\r\n        CnpjPipe,\r\n        CpfPipe,\r\n        CpfCnpjPipe,\r\n        TelefonePipe,\r\n        CeiPipe,\r\n        RealPipe\r\n    ]\r\n})\r\nexport class Ng2BRPipesModule { }\r\n","/*\r\n * Public API Surface of ng2-brpipes\r\n */\r\nexport * from './lib/real.pipe';\r\nexport * from './lib/cei.pipe';\r\nexport * from './lib/telefone.pipe';\r\nexport * from './lib/cpf.pipe';\r\nexport * from './lib/cnpj.pipe';\r\nexport * from './lib/cpf-cnpj.pipe';\r\nexport * from './lib/cep.pipe';\r\nexport * from './lib/br-pipes.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}